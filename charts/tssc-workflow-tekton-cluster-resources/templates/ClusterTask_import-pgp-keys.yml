apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: import-pgp-keys
  labels:
    {{- include "tssc-workflow-tekton-cluster-resources.labels" . | nindent 4 }}
  annotations:
    tekton.dev/pipelines.minVersion: "0.14.0"
    tekton.dev/tags: tssc,pgp,gpg
    tekton.dev/displayName: Import PGP Keys
spec:
  workspaces:
  - name: home
    mountPath: /home/tssc
    description: >-
      Workspace for the container users home directory.

      Important because the home directory is where GPG will install the PGP keys for use by
      future steps.
  params:
  - name: verbose
    description: log the commands used during execution
    type: string
    default: "false"
  - name: image
    type: string
    description: >-
      Container image to run the steps of this task in.
    default: tssc/tssc-base:latest
  # NOTE: See https://github.com/tektoncd/pipeline/issues/3423
  #- name: imagePullPolicy
  #  type: string
  #  description: >-
  #    Policy for pulling new versions of the given image.
  #  default: IfNotPresent

  - name: pgpKeysSecretName
    type: string
    default: tssc-tekton-pgp-keys
  volumes:
  - name: pgp-private-keys
    secret:
      secretName: "$(params.pgpKeysSecretName)"
  steps:
  - name: import-pgp-key
    image: $(params.image)
    # NOTE:
    #   when https://github.com/tektoncd/pipeline/issues/3423 resolved
    #   replace with $(params.imagePullPolicy)
    imagePullPolicy: {{ $.Values.imagePullPolicy }}
    {{- if $.Values.runAsUser }}
    securityContext:
      runAsUser: {{ $.Values.runAsUser | int }}
    {{- end }}
    env:
    - name: HOME
      value: $(workspaces.home.path)
    - name: VERBOSE
      value: $(params.verbose)
    volumeMounts:
    - name: pgp-private-keys
      mountPath: /var/pgp-private-keys
    script: |
      #!/bin/sh
      if [ "${VERBOSE}" == "true" ]; then set -x; else set +x; fi
      set -eu -o pipefail

      echo "*******************"
      echo "* Import PGP Keys *"
      echo "*******************"

      gpg --import /var/pgp-private-keys/*
