---
name: Release Helm Charts

on:
  push:
    branches:
    - main
    - release

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      helm-charts: ${{ steps.helm-charts.outputs.helm-charts }}
      semver-pre-release: ${{ steps.semver-pre-release.outputs.semver-pre-release }}
      semver-build: ${{ steps.semver-build.outputs.semver-build }}
      release-name-template: ${{ steps.release-name-template.outputs.release-name-template }}
    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Determine Helm Charts to release ‚öôÔ∏è
      id: helm-charts
      run: |
        HELM_CHARTS=$(python -c 'import os, json; print json.dumps(os.listdir("charts/"))')
        echo "::set-output name=helm-charts::${HELM_CHARTS}"

    - name: Determine release name template
      id: release-name-template
      run: |
        # determine the release name template prefix based on branch name
        #   if GITHUB_REF is the default branch: edge
        #   if GITHUB_REF is a different branch: {branch_name}
        RELEASE_NAME_TEMPALTE_PREFIX=""
        if [[ $GITHUB_REF == refs/heads/* ]]; then
          RELEASE_NAME_TEMPALTE_PREFIX=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "${RELEASE_NAME_TEMPALTE_PREFIX}" ]; then
            RELEASE_NAME_TEMPALTE_PREFIX=edge
          fi
        else
          echo "This script doesn't currently no how to handle anything but branches"
          exit 1
        fi

        # create the release name template
        # SEE:
        #   * https://github.com/helm/chart-releaser#create-github-releases-from-helm-chart-packages
        #   * https://github.com/helm/chart-releaser#create-the-repository-index-from-github-releases
        RELEASE_NAME_TEMPALTE="${RELEASE_NAME_TEMPALTE_PREFIX}/{{ .Name }}-{{ .Version }}"

        echo "::set-output name=release-name-template::${RELEASE_NAME_TEMPALTE}"

    - name: Determine SemVer pre-release ‚öôÔ∏è
      id: semver-pre-release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        LAST_RELEASE_TAG_COMMIT=$(git describe --tags --abbrev=0 --match="release/*" 2>/dev/null || echo "")

        if [[ ${LAST_RELEASE_TAG_COMMIT} ]]; then
          COMMITS_SINCE_TAG=$(git rev-list ${LAST_RELEASE_TAG_COMMIT}..HEAD --count)
        else
          COMMITS_SINCE_TAG=$(git rev-list HEAD --count)
        fi

        SEMVER_PRE_RELEASE="edge.${COMMITS_SINCE_TAG}"

        echo "::set-output name=semver-pre-release::${SEMVER_PRE_RELEASE}"

    - name: Determine SemVer build ‚öôÔ∏è
      id: semver-build
      run: |
        SEMVER_BUILD="SHA-${GITHUB_SHA::8}"
        echo "::set-output name=semver-build::${SEMVER_BUILD}"

  prepare-for-release:
    runs-on: ubuntu-latest
    needs:
    - setup
    strategy:
      matrix:
        helm-chart: ${{fromJson(needs.setup.outputs.helm-charts)}}
    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2

    - name: Read Helm Chart üìí
      id: helm-chart-info
      uses: jacobtomlinson/gha-read-helm-chart@master
      with:
        path: charts/${{ matrix.helm-chart }}

    - name: Determine Helm Chart version ‚öôÔ∏è
      id: helm-chart-version
      run: |
        VERSION="${{ steps.helm-chart-info.outputs.version }}"
        PRE_RELEASE="${{needs.setup.outputs.semver-pre-release}}"
        BUILD="${{needs.setup.outputs.semver-build}}"

        # if set append pre-release to SemVer
        if [[ ${PRE_RELEASE} ]]; then
          VERSION="${VERSION}-${PRE_RELEASE}"
        fi

        # NOTE:
        #   Commented out due to https://github.com/helm/chart-releaser-action/issues/56
        # if set append build to SemVer
        #if [[ ${BUILD} ]]; then
        #  VERSION="${VERSION}+${BUILD}"
        #fi

        echo "::set-output name=version::${VERSION}"

    - name: Update Helm Chart version üñã
      uses: microsoft/variable-substitution@v1
      with:
        files: 'charts/${{ matrix.helm-chart }}/Chart.yaml'
      env:
        version: ${{steps.helm-chart-version.outputs.version}}

    - name: Upload Helm Chart prepared for release üî∫
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.helm-chart }}
        path: charts/${{ matrix.helm-chart }}

  release:
    runs-on: ubuntu-latest
    needs:
    - setup
    - prepare-for-release
    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # NOTE:
    #   while it would be nice to download these to different directory like `release-charts`
    #   the chart-releaser-action thinks there are no changes to publish when the target charts_dir
    #   isn't in the git history
    - name: Download Helm Charts prepared to release üîª
      id: download-helm-charts
      uses: actions/download-artifact@v2
      with:
        path: charts

    - name: Configure Git üõ†
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Install Helm üß∞
      uses: azure/setup-helm@v1
      with:
        version: v3.4.0

    - name: Run chart-releaser üöÄ
      uses: helm/chart-releaser-action@master
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      with:
        charts_dir: ${{steps.download-helm-charts.outputs.download-path}}
        #release_name_template: ${{needs.setup.outputs.release-name-template}}
